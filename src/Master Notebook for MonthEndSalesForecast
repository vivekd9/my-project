import json

#Retry notebook excecution
def run_with_retry(notebook, timeout, args = {}, max_retries = 3):
  num_retries = 0
  while True:
    try:
      return dbutils.notebook.run(notebook, timeout, args)
    except Exception as e:
      if num_retries > max_retries:
        print("Error >> "+e)
        raise e
      else:
        print("Retrying error >> {0}".format(e))
        num_retries += 1
        return dbutils.notebook.run(notebook, timeout, args)
        
#This job will run the following notebook synchronously.        

notebooks = ["/Shared/ML_Notebook/MonthEndSalesForecast/MonthEndSalesForecast"]

for notebook in notebooks:
   print(notebook)
   run_with_retry(notebook, 1200, args={"isDailyJob":"True"},max_retries = 2)
    
